library("estimatr")
rm(list = ls())
set.seed(60375)
# Data
Data.raw <- read_dta("./data/Romania_PU_AER_data.dta")
Data <- data.frame(dzag=Data.raw$dzag,bcg=Data.raw$bcg,sid2=Data.raw$sid2,zga=Data.raw$zga,nusua=Data.raw$nusua,uazY=Data.raw$uazY)#,survey=Data.raw$survey)
DataWhole <- Data
Data[Data$zga < 7.74,] <- NA
DataSubPlus <- na.omit(Data)
DataWhole <- na.omit(DataWhole)
B <- 30
theta_null <- 0  # null hypothesis
L_b <- rep(0,B)
U_b <- rep(0,B)
flag_rFix <- FALSE
# Density estimation
Density <- rddensity(DataSubPlus$dzag)
summary(Density)
f_minus <- Density$hat[[1]]
f_plus <- Density$hat[[2]]
h_dl <- Density$h[[1]]
h_dr <- Density$h[[2]]
r <- f_minus/f_plus
r <- min(c(1,r))
# Local Linear Regression
#RDD <- rdrobust(DataSubPlus$bcg,DataSubPlus$dzag,cluster=DataSubPlus$sid2)
#rdplot(DataSubPlus$bcg,DataSubPlus$dzag, x.lim = c(-2.7,4.59))
DataSubPlus$dzagPos <- (DataSubPlus$dzag >= 0)
DataSubPlus$dzagSq <- DataSubPlus$dzag^2
for (val in c(5.5,seq(6,9,length=7),9.5))
{
DataSubPlus$dep <- (DataSubPlus$bcg <= val)
N <- length(DataSubPlus$dep)
IKband <- IKbandwidth(X = DataSubPlus$dzag,Y=DataSubPlus$dep)
fml <- paste0(paste0("(bcg <= ",val),") ~ dzagPos + dzag + dzag*dzagPos")
Res <- lm.cluster(data=DataSubPlus[abs(DataSubPlus$dzag) <= IKband/3,],formula=fml,cluster = DataSubPlus[abs(DataSubPlus$dzag) <= IKband/3,"sid2"])
print(val)
summary(Res)
mu_minus <- Res$lm_res$coefficients["(Intercept)"]
mu_plus <- mu_minus+Res$lm_res$coefficients["dzagPosTRUE"]
rdd_est <- mu_plus - mu_minus
# Estimation
y_L <- 0
y_U <- 1
theta_L <- (mu_plus - y_U) - r*(mu_minus - y_U)
theta_U <- (mu_plus - y_L) - r*(mu_minus - y_L)
theta_L <- min(c(theta_L,1))
theta_L <- max(c(theta_L,-1))
theta_U <- min(c(theta_U,1))
theta_U <- max(c(theta_U,-1))
theta_L
theta_U
print(c(val,rdd_est,theta_L,theta_U))
#bootstrap
for(b in 1:B){
n_b <- 0
while (n_b <= N)
{
strap_strata <- sample(unique(DataSubPlus$sid2),size=length(unique(DataSubPlus$sid2))/10,replace=FALSE)
if (n_b == 0)
{
dzag_b <- DataSubPlus$dzag[DataSubPlus$sid2 %in% strap_strata]
dep_b <- DataSubPlus$dep[DataSubPlus$sid2 %in% strap_strata]
} else {
dzag_b <- c(dzag_b,DataSubPlus$dzag[DataSubPlus$sid2 %in% strap_strata])
dep_b <- c(dep_b,DataSubPlus$dep[DataSubPlus$sid2 %in% strap_strata])
}
n_b <- length(dzag_b)
}
r_b <- r
if (flag_rFix == FALSE)
{
Density <- rddensity(dzag_b,c=0,p=2,q=3,kerne="triangular",h=c(h_dl,h_dr))
f_minus_b <- Density$hat[[1]]
f_plus_b <- Density$hat[[2]]
r_b <- f_minus_b/f_plus_b
r_b <- min(c(1,r_b))
}
IKband_b <- IKbandwidth(X = dzag_b,Y=dep_b)
dzagPos_b <- (dzag_b >= 0)
DataBoot <- data.frame(dep_b=dep_b[dzag_b <= IKband_b/3],dzagPos_b=dzagPos_b[dzag_b <= IKband_b/3],dzag_b=dzag_b[dzag_b <= IKband_b/3])
fml <- "dep_b ~ dzagPos_b + dzag_b + dzag_b*dzagPos_b"
#Res <- lm.cluster(data=DataWhole[abs(DataWhole$dzag) <= 1,],formula=fml,cluster = DataWhole[abs(DataWhole$dzag) <= 1,"sid2"])
#summary(Res)
#Res <- lm.cluster(data=DataWhole[abs(DataWhole$dzag) <= IKband/2,],formula=fml,cluster = DataWhole[abs(DataWhole$dzag) <= IKband/2,"sid2"])
#summary(Res)
Res_b <- lm(data=DataBoot,formula=fml)
val
summary(Res_b)
mu_minus_b <- Res_b$coefficients["(Intercept)"]
mu_plus_b <- mu_minus_b+Res_b$coefficients["dzagPos_bTRUE"]
L_b[b] <- (mu_plus_b - y_U) - r_b*(mu_minus_b - y_U)
U_b[b] <- (mu_plus_b - y_L) - r_b*(mu_minus_b - y_L)
#if (b %% 100 == 0) {
#  print(b)
#  F_b_int <- ecdf(Res_phi[1:b])
#  Q <- a_n*phi_0
#  P_value_int <- 1-F_b_int(Q)
#  print(P_value_int)
#}
}
for (v in 1:1000) {
value <- (v/500 - 1)
if (mean((L_b <= value) & (value <= U_b) >= 0.95) {print(value)}
# Density estimation
Density <- rddensity(DataSubPlus$dzag)
summary(Density)
f_minus <- Density$hat[[1]]
f_plus <- Density$hat[[2]]
h_dl <- Density$h[[1]]
h_dr <- Density$h[[2]]
r <- f_minus/f_plus
r <- min(c(1,r))
# Local Linear Regression
#RDD <- rdrobust(DataSubPlus$bcg,DataSubPlus$dzag,cluster=DataSubPlus$sid2)
#rdplot(DataSubPlus$bcg,DataSubPlus$dzag, x.lim = c(-2.7,4.59))
DataSubPlus$dzagPos <- (DataSubPlus$dzag >= 0)
DataSubPlus$dzagSq <- DataSubPlus$dzag^2
for (val in c(5.5,seq(6,9,length=7),9.5))
{
DataSubPlus$dep <- (DataSubPlus$bcg <= val)
N <- length(DataSubPlus$dep)
IKband <- IKbandwidth(X = DataSubPlus$dzag,Y=DataSubPlus$dep)
fml <- paste0(paste0("(bcg <= ",val),") ~ dzagPos + dzag + dzag*dzagPos")
Res <- lm.cluster(data=DataSubPlus[abs(DataSubPlus$dzag) <= IKband/3,],formula=fml,cluster = DataSubPlus[abs(DataSubPlus$dzag) <= IKband/3,"sid2"])
print(val)
summary(Res)
mu_minus <- Res$lm_res$coefficients["(Intercept)"]
mu_plus <- mu_minus+Res$lm_res$coefficients["dzagPosTRUE"]
rdd_est <- mu_plus - mu_minus
# Estimation
y_L <- 0
y_U <- 1
theta_L <- (mu_plus - y_U) - r*(mu_minus - y_U)
theta_U <- (mu_plus - y_L) - r*(mu_minus - y_L)
theta_L <- min(c(theta_L,1))
theta_L <- max(c(theta_L,-1))
theta_U <- min(c(theta_U,1))
theta_U <- max(c(theta_U,-1))
theta_L
theta_U
print(c(val,rdd_est,theta_L,theta_U))
#bootstrap
for(b in 1:B){
n_b <- 0
while (n_b <= N)
{
strap_strata <- sample(unique(DataSubPlus$sid2),size=length(unique(DataSubPlus$sid2))/10,replace=FALSE)
if (n_b == 0)
{
dzag_b <- DataSubPlus$dzag[DataSubPlus$sid2 %in% strap_strata]
dep_b <- DataSubPlus$dep[DataSubPlus$sid2 %in% strap_strata]
} else {
dzag_b <- c(dzag_b,DataSubPlus$dzag[DataSubPlus$sid2 %in% strap_strata])
dep_b <- c(dep_b,DataSubPlus$dep[DataSubPlus$sid2 %in% strap_strata])
}
n_b <- length(dzag_b)
}
r_b <- r
if (flag_rFix == FALSE)
{
Density <- rddensity(dzag_b,c=0,p=2,q=3,kerne="triangular",h=c(h_dl,h_dr))
f_minus_b <- Density$hat[[1]]
f_plus_b <- Density$hat[[2]]
r_b <- f_minus_b/f_plus_b
r_b <- min(c(1,r_b))
}
IKband_b <- IKbandwidth(X = dzag_b,Y=dep_b)
dzagPos_b <- (dzag_b >= 0)
DataBoot <- data.frame(dep_b=dep_b[dzag_b <= IKband_b/3],dzagPos_b=dzagPos_b[dzag_b <= IKband_b/3],dzag_b=dzag_b[dzag_b <= IKband_b/3])
fml <- "dep_b ~ dzagPos_b + dzag_b + dzag_b*dzagPos_b"
#Res <- lm.cluster(data=DataWhole[abs(DataWhole$dzag) <= 1,],formula=fml,cluster = DataWhole[abs(DataWhole$dzag) <= 1,"sid2"])
#summary(Res)
#Res <- lm.cluster(data=DataWhole[abs(DataWhole$dzag) <= IKband/2,],formula=fml,cluster = DataWhole[abs(DataWhole$dzag) <= IKband/2,"sid2"])
#summary(Res)
Res_b <- lm(data=DataBoot,formula=fml)
val
summary(Res_b)
mu_minus_b <- Res_b$coefficients["(Intercept)"]
mu_plus_b <- mu_minus_b+Res_b$coefficients["dzagPos_bTRUE"]
L_b[b] <- (mu_plus_b - y_U) - r_b*(mu_minus_b - y_U)
U_b[b] <- (mu_plus_b - y_L) - r_b*(mu_minus_b - y_L)
#if (b %% 100 == 0) {
#  print(b)
#  F_b_int <- ecdf(Res_phi[1:b])
#  Q <- a_n*phi_0
#  P_value_int <- 1-F_b_int(Q)
#  print(P_value_int)
#}
}
for (v in 1:1000) {
value <- (v/500 - 1)
if (mean((L_b <= value) & (value <= U_b) >= 0.95) {print(value)}
# Density estimation
Density <- rddensity(DataSubPlus$dzag)
summary(Density)
f_minus <- Density$hat[[1]]
f_plus <- Density$hat[[2]]
h_dl <- Density$h[[1]]
h_dr <- Density$h[[2]]
r <- f_minus/f_plus
r <- min(c(1,r))
# Local Linear Regression
#RDD <- rdrobust(DataSubPlus$bcg,DataSubPlus$dzag,cluster=DataSubPlus$sid2)
#rdplot(DataSubPlus$bcg,DataSubPlus$dzag, x.lim = c(-2.7,4.59))
DataSubPlus$dzagPos <- (DataSubPlus$dzag >= 0)
DataSubPlus$dzagSq <- DataSubPlus$dzag^2[]
for (val in c(5.5,seq(6,9,length=7),9.5))
{
DataSubPlus$dep <- (DataSubPlus$bcg <= val)
N <- length(DataSubPlus$dep)
IKband <- IKbandwidth(X = DataSubPlus$dzag,Y=DataSubPlus$dep)
fml <- paste0(paste0("(bcg <= ",val),") ~ dzagPos + dzag + dzag*dzagPos")
Res <- lm.cluster(data=DataSubPlus[abs(DataSubPlus$dzag) <= IKband/3,],formula=fml,cluster = DataSubPlus[abs(DataSubPlus$dzag) <= IKband/3,"sid2"])
print(val)
summary(Res)
mu_minus <- Res$lm_res$coefficients["(Intercept)"]
mu_plus <- mu_minus+Res$lm_res$coefficients["dzagPosTRUE"]
rdd_est <- mu_plus - mu_minus
# Estimation
y_L <- 0
y_U <- 1
theta_L <- (mu_plus - y_U) - r*(mu_minus - y_U)
theta_U <- (mu_plus - y_L) - r*(mu_minus - y_L)
theta_L <- min(c(theta_L,1))
theta_L <- max(c(theta_L,-1))
theta_U <- min(c(theta_U,1))
theta_U <- max(c(theta_U,-1))
theta_L
theta_U
print(c(val,rdd_est,theta_L,theta_U))
#bootstrap
for(b in 1:B){
n_b <- 0
while (n_b <= N)
{
strap_strata <- sample(unique(DataSubPlus$sid2),size=length(unique(DataSubPlus$sid2))/10,replace=FALSE)
if (n_b == 0)
{
dzag_b <- DataSubPlus$dzag[DataSubPlus$sid2 %in% strap_strata]
dep_b <- DataSubPlus$dep[DataSubPlus$sid2 %in% strap_strata]
} else {
dzag_b <- c(dzag_b,DataSubPlus$dzag[DataSubPlus$sid2 %in% strap_strata])
dep_b <- c(dep_b,DataSubPlus$dep[DataSubPlus$sid2 %in% strap_strata])
}
n_b <- length(dzag_b)
}
r_b <- r
if (flag_rFix == FALSE)
{
Density <- rddensity(dzag_b,c=0,p=2,q=3,kerne="triangular",h=c(h_dl,h_dr))
f_minus_b <- Density$hat[[1]]
f_plus_b <- Density$hat[[2]]
r_b <- f_minus_b/f_plus_b
r_b <- min(c(1,r_b))
}
IKband_b <- IKbandwidth(X = dzag_b,Y=dep_b)
dzagPos_b <- (dzag_b >= 0)
DataBoot <- data.frame(dep_b=dep_b[dzag_b <= IKband_b/3],dzagPos_b=dzagPos_b[dzag_b <= IKband_b/3],dzag_b=dzag_b[dzag_b <= IKband_b/3])
fml <- "dep_b ~ dzagPos_b + dzag_b + dzag_b*dzagPos_b"
#Res <- lm.cluster(data=DataWhole[abs(DataWhole$dzag) <= 1,],formula=fml,cluster = DataWhole[abs(DataWhole$dzag) <= 1,"sid2"])
#summary(Res)
#Res <- lm.cluster(data=DataWhole[abs(DataWhole$dzag) <= IKband/2,],formula=fml,cluster = DataWhole[abs(DataWhole$dzag) <= IKband/2,"sid2"])
#summary(Res)
Res_b <- lm(data=DataBoot,formula=fml)
val
summary(Res_b)
mu_minus_b <- Res_b$coefficients["(Intercept)"]
mu_plus_b <- mu_minus_b+Res_b$coefficients["dzagPos_bTRUE"]
L_b[b] <- (mu_plus_b - y_U) - r_b*(mu_minus_b - y_U)
U_b[b] <- (mu_plus_b - y_L) - r_b*(mu_minus_b - y_L)
#if (b %% 100 == 0) {
#  print(b)
#  F_b_int <- ecdf(Res_phi[1:b])
#  Q <- a_n*phi_0
#  P_value_int <- 1-F_b_int(Q)
#  print(P_value_int)
#}
}
for (v in 1:1000) {
value <- (v/500 - 1)
if (mean((L_b <= value) & (value <= U_b) >= 0.95) {print(value)}
```{r main spec, warnings=FALSE}
# Density estimation
Density <- rddensity(DataSubPlus$dzag)
summary(Density)
f_minus <- Density$hat[[1]]
f_plus <- Density$hat[[2]]
h_dl <- Density$h[[1]]
h_dr <- Density$h[[2]]
r <- f_minus/f_plus
r <- min(c(1,r))
# Local Linear Regression
#RDD <- rdrobust(DataSubPlus$bcg,DataSubPlus$dzag,cluster=DataSubPlus$sid2)
#rdplot(DataSubPlus$bcg,DataSubPlus$dzag, x.lim = c(-2.7,4.59))
DataSubPlus$dzagPos <- (DataSubPlus$dzag >= 0)
DataSubPlus$dzagSq <- DataSubPlus$dzag^2
for (val in c(5.5,seq(6,9,length=7),9.5))
{
DataSubPlus$dep <- (DataSubPlus$bcg <= val)
N <- length(DataSubPlus$dep)
IKband <- IKbandwidth(X = DataSubPlus$dzag,Y=DataSubPlus$dep)
fml <- paste0(paste0("(bcg <= ",val),") ~ dzagPos + dzag + dzag*dzagPos")
Res <- lm.cluster(data=DataSubPlus[abs(DataSubPlus$dzag) <= IKband/3,],formula=fml,cluster = DataSubPlus[abs(DataSubPlus$dzag) <= IKband/3,"sid2"])
print(val)
summary(Res)
mu_minus <- Res$lm_res$coefficients["(Intercept)"]
mu_plus <- mu_minus+Res$lm_res$coefficients["dzagPosTRUE"]
rdd_est <- mu_plus - mu_minus
# Estimation
y_L <- 0
y_U <- 1
theta_L <- (mu_plus - y_U) - r*(mu_minus - y_U)
theta_U <- (mu_plus - y_L) - r*(mu_minus - y_L)
theta_L <- min(c(theta_L,1))
theta_L <- max(c(theta_L,-1))
theta_U <- min(c(theta_U,1))
theta_U <- max(c(theta_U,-1))
theta_L
theta_U
print(c(val,rdd_est,theta_L,theta_U))
#bootstrap
for(b in 1:B){
n_b <- 0
while (n_b <= N)
{
strap_strata <- sample(unique(DataSubPlus$sid2),size=length(unique(DataSubPlus$sid2))/10,replace=FALSE)
if (n_b == 0)
{
dzag_b <- DataSubPlus$dzag[DataSubPlus$sid2 %in% strap_strata]
dep_b <- DataSubPlus$dep[DataSubPlus$sid2 %in% strap_strata]
} else {
dzag_b <- c(dzag_b,DataSubPlus$dzag[DataSubPlus$sid2 %in% strap_strata])
dep_b <- c(dep_b,DataSubPlus$dep[DataSubPlus$sid2 %in% strap_strata])
}
n_b <- length(dzag_b)
}
r_b <- r
if (flag_rFix == FALSE)
{
Density <- rddensity(dzag_b,c=0,p=2,q=3,kerne="triangular",h=c(h_dl,h_dr))
f_minus_b <- Density$hat[[1]]
f_plus_b <- Density$hat[[2]]
r_b <- f_minus_b/f_plus_b
r_b <- min(c(1,r_b))
}
IKband_b <- IKbandwidth(X = dzag_b,Y=dep_b)
dzagPos_b <- (dzag_b >= 0)
DataBoot <- data.frame(dep_b=dep_b[dzag_b <= IKband_b/3],dzagPos_b=dzagPos_b[dzag_b <= IKband_b/3],dzag_b=dzag_b[dzag_b <= IKband_b/3])
fml <- "dep_b ~ dzagPos_b + dzag_b + dzag_b*dzagPos_b"
#Res <- lm.cluster(data=DataWhole[abs(DataWhole$dzag) <= 1,],formula=fml,cluster = DataWhole[abs(DataWhole$dzag) <= 1,"sid2"])
#summary(Res)
#Res <- lm.cluster(data=DataWhole[abs(DataWhole$dzag) <= IKband/2,],formula=fml,cluster = DataWhole[abs(DataWhole$dzag) <= IKband/2,"sid2"])
#summary(Res)
Res_b <- lm(data=DataBoot,formula=fml)
val
summary(Res_b)
mu_minus_b <- Res_b$coefficients["(Intercept)"]
mu_plus_b <- mu_minus_b+Res_b$coefficients["dzagPos_bTRUE"]
L_b[b] <- (mu_plus_b - y_U) - r_b*(mu_minus_b - y_U)
U_b[b] <- (mu_plus_b - y_L) - r_b*(mu_minus_b - y_L)
#if (b %% 100 == 0) {
#  print(b)
#  F_b_int <- ecdf(Res_phi[1:b])
#  Q <- a_n*phi_0
#  P_value_int <- 1-F_b_int(Q)
#  print(P_value_int)
#}
}
for (v in 1:1000) {
value <- (v/500 - 1)
if (mean((L_b <= value) & (value <= U_b)) >= 0.95) {
print(value)
}
}
}
library("haven")
library("rddensity")
library("rdrobust")
library("miceadds")
library("rdd")
library("estimatr")
data <- read_dta("./data/US_House_CS_data.dta")
data <- data[data$Use == 1,]
keep if Use == 1 & DifDPct != . //& DifDPNxt != . & DifDPPrv != .
data$DifDPct
is.na(data$DifDPct)
sum(is.na(data$DifDPct))
sum(is.na(data$DifDPct) == 0)
data <- read_dta("./data/US_House_CS_data.dta")
sum(is.na(data$DifDPct))
sum(is.na(data$DifDPct))
data <- read_dta("./data/US_House_CS_data.dta")
data <- data[data$Use == 1,]
data$inc_margin[data$DWinPrv == 1,] <- data$DifDPct[data$DWinPrv == 1,]
data <- read_dta("./data/US_House_CS_data.dta")
data <- data[data$Use == 1,]
data$inc_margin[data$DWinPrv == 1] <- data$DifDPct[data$DWinPrv == 1,]
data <- read_dta("./data/US_House_CS_data.dta")
data <- data[data$Use == 1,]
data$inc_margin[data$DWinPrv == 1] <- data$DifDPct[data$DWinPrv == 1]
data$DifDPct
is.na(data$DifDPct)
sum(is.na(data$DifDPct))
sum(is.na(data$DWinPrv))
data <- read_dta("./data/US_House_CS_data.dta")
data <- data[data$Use == 1,]
data$inc_margin[
data$DWinPrv == 1 & !is.na(data$DWinPrv)
] <- data$DifDPct[data$DWinPrv == 1 & !is.na(data$DWinPrv)]
data$inc_margin[
data$DWinPrv == 0 & !is.na(data$DWinPrv)
] <- -data$DifDPct[data$DWinPrv == 0 & !is.na(data$DWinPrv)]
data$inc_won[data$DWinPrv == 1] <- data$DWinNxt[data$DWinPrv == 1]
data <- read_dta("./data/US_House_CS_data.dta")
data <- data[data$Use == 1,]
data$inc_margin[data$DWinPrv == 1] <- data$DifDPct[data$DWinPrv == 1]
data <- read_dta("./data/US_House_CS_data.dta")
data <- data[data$Use == 1,]
data$inc_margin <- data$DifDPct
data$inc_margin[
data$DWinPrv == 1 & !is.na(data$DifDPct)
] <- data$DifDPct[data$DWinPrv == 1 & !is.na(data$DifDPct)]
data <- read_dta("./data/US_House_CS_data.dta")
data <- data[data$Use == 1,]
data$inc_margin <- (-1^(data$DWinPrv)) * data$DifDPct
result <- rddensity::rddensity(inc_margin)
data <- read_dta("./data/US_House_CS_data.dta")
data <- data[data$Use == 1,]
data$inc_margin <- (-1^(data$DWinPrv)) * data$DifDPct
result <- rddensity::rddensity(x = data$inc_margin)
data <- read_dta("./data/US_House_CS_data.dta")
data <- data[data$Use == 1,]
data$inc_margin <- (-1^(data$DWinPrv)) * data$DifDPct
result <- rddensity::rddensity(X = data$inc_margin)
summary(result)
rddensity::rdplotdensity(result)
data <- read_dta("./data/US_House_CS_data.dta")
data <- data[data$Use == 1,]
data$inc_margin <- (-1^(data$DWinPrv)) * data$DifDPct
result <- rddensity::rddensity(X = data$inc_margin)
summary(result)
rddensity::rdplotdensity(rdd = result,X = data$inc_margin)
data <- read_dta("./data/US_House_CS_data.dta")
data <- data[data$Use == 1,]
data$inc_margin <- (-1^(data$DWinPrv)) * data$DifDPct
result <- rddensity::rddensity(X = data$inc_margin)
summary(result)
data <- read_dta("./data/US_House_CS_data.dta")
data <- data[data$Use == 1,]
data$inc_margin <- (-1^(data$DWinPrv)) * data$DifDPct
result <- rddensity::rddensity(X = data$inc_margin)
summary(result)
rddensity::rdplotdensity(rdd = result,X = data$inc_margin)
data <- read_dta("./data/US_House_CS_data.dta")
data <- data[data$Use == 1,]
data$inc_margin <- (-1^(data$DWinPrv)) * data$DifDPct
result <- rddensity::rddensity(X = data$inc_margin)
result <- rddensity::rdplotdensity(rdd = result,X = data$inc_margin)
summary(result)
data <- read_dta("./data/US_House_CS_data.dta")
data <- data[data$Use == 1,]
data$inc_margin <- (-1^(data$DWinPrv)) * data$DifDPct
result <- rddensity::rddensity(X = data$inc_margin)
summary(result)
result <- rddensity::rdplotdensity(rdd = result,X = data$inc_margin)
summary(result)
Data.raw <- read_dta("./data/Romania_PU_AER_data.dta")
result
result$Estl
result$Estl$Estimate
result <- rddensity::rddensity(X = data_sub_plus$dzag)
result <- rddensity::rddensity(X = data$inc_margin)
result$hat$left/result$hat$right
plot(data$DemPct,data$DemWin)
plot(data$DifDPct,data$DemWin)
data <- read_dta("./data/US_House_CS_data.dta")
data <- data[data$Use == 1,]
data$inc_margin_original <- data$DifDPct
result <- rddensity::rddensity(X = data$inc_margin_original)
summary(result)
cat("tau statistic: ",1-result$hat$left/result$hat$right)
result <- rddensity::rdplotdensity(rdd = result,X = data$inc_margin_original)
summary(result)
data$inc_margin <- (-1^(data$DWinPrv)) * data$DifDPct
result <- rddensity::rddensity(X = data$inc_margin)
summary(result)
cat("tau statistic: ",1-result$hat$left/result$hat$right)
result <- rddensity::rdplotdensity(rdd = result,X = data$inc_margin)
summary(result)
plot(data$DemPct,data$DemWin)
plot(data$DifDPct,data$DemWin)
data
plot(data$DifDPct,data$DemPct)
View(data)
data <- read_dta("./data/US_House_CS_data.dta")
data <- data[data$Use == 1,]
# DifDPct is the vote share margin of Deomocratic party
data$inc_margin_original <- data$DifDPct
result <- rddensity::rddensity(X = data$inc_margin_original)
summary(result)
cat("tau statistic: ",1-result$hat$left/result$hat$right)
result <- rddensity::rdplotdensity(rdd = result,X = data$inc_margin_original)
summary(result)
# inc_margin is constructed by flipping the sign if Dem is not incumbent
# thus inc_margin is the vote share margin of incumbent party candidate
data$inc_margin <- (-1^(data$DWinPrv)) * data$DifDPct
result <- rddensity::rddensity(X = data$inc_margin)
summary(result)
cat("tau statistic: ",1-result$hat$left/result$hat$right)
result <- rddensity::rdplotdensity(rdd = result,X = data$inc_margin)
summary(result)
